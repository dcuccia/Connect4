

@if (!gameStarted)
{
    <p>Challenger</p>
    <NameEntry @bind-Name="ChallengerName" @bind-NameIsValid="challengerNameIsValid" />

    <br />

    <p>Opponent</p>
    <NameEntry @bind-Name="OpponentName" @bind-NameIsValid="opponentNameIsValid" />
}
else if (NamesAreValid)
{
    <p>Challenger: @ChallengerName</p>

    <p>Opponent: @OpponentName</p>
}

<br />

@if (NamesAreValid && !gameStarted)
{
    <button @onclick="StartGame">Start Game!</button>
}

@if (gameStarted)
{
    <button @onclick="Reset">Reset Game</button>
}

<br />
<br />

@if (gameStarted && !gameComplete)
{
    <text>@game.NextMove.Name.FirstName</text><text>&#39;s (</text>@game.NextMove.PlayerColor.Value<text>&#39;s) turn!</text>
    <br />
    <text>Move to column: </text>
    <div>
        <button class="px-2" @onclick="()=>Move(1)">1</button>
        <button class="px-2" @onclick="()=>Move(2)">2</button>
        <button class="px-2" @onclick="()=>Move(3)">3</button>
        <button class="px-2" @onclick="()=>Move(4)">4</button>
        <button class="px-2" @onclick="()=>Move(5)">5</button>
        <button class="px-2" @onclick="()=>Move(6)">6</button>
        <button class="px-2" @onclick="()=>Move(7)">7</button>
    </div>
}

<br />

@if (!string.IsNullOrWhiteSpace(TurnMessage))
{
    <text>@TurnMessage</text>
}

<br />

@if (!string.IsNullOrWhiteSpace(BoardStateString))
{
    <textarea rows="7" cols="30">@BoardStateString</textarea>
}

@code
{
    private bool challengerNameIsValid;
    private bool opponentNameIsValid;
    private bool NamesAreValid => challengerNameIsValid && opponentNameIsValid;
    private bool gameStarted = false;
    private bool gameComplete = false;
    private Game game;
    private string BoardStateString { get; set; } = "";
    private string TurnMessage { get; set; } = "";
    private MutableName ChallengerName { get; set; } = new();
    private MutableName OpponentName { get; set; } = new();

    void StartGame()
    {
        var challenger = new Challenger(
            new Name(ChallengerName.FirstName, ChallengerName.LastName));

        var opponent = new Opponent(
            new Name(OpponentName.FirstName, OpponentName.LastName));

        game = new NewGame(challenger, opponent);
        gameStarted = true;
        BoardStateString = game.GetFormattedBoardStateString();
    }

    void Move(int column)
    {
        (var updatedGame, TurnMessage) = game.Move(new Column(new ValidColumnNumber(column)));

        BoardStateString = updatedGame.GetFormattedBoardStateString();

        if (updatedGame.Value is WonGame or DrawGame)
            gameComplete = true;
        else if (updatedGame.Value is Game g)
            game = g;
    }

    void Reset()
    {
        ChallengerName = new();
        challengerNameIsValid = false;
        OpponentName = new();
        opponentNameIsValid = false;
        gameStarted = false;
        gameComplete = false;
        TurnMessage = "";
        BoardStateString = "";
    }
}
